# Generated by Django 5.2.5 on 2025-09-30 09:39

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('role', models.CharField(choices=[('student', 'Student'), ('parent', 'Parent'), ('instructor', 'Instructor'), ('admin', 'Admin')], default='student', max_length=20)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['email'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('display_name', models.CharField(blank=True, max_length=150, null=True)),
                ('avatar_url', models.TextField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=16, null=True)),
                ('language', models.CharField(default='vi', max_length=8)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
            },
        ),
        migrations.CreateModel(
            name='ParentalConsent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('consented_at', models.DateTimeField(auto_now_add=True)),
                ('scopes', models.JSONField(blank=True, default=list)),
                ('revoked_at', models.DateTimeField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consents_received', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consents_given', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Parental Consent',
                'verbose_name_plural': 'Parental Consents',
            },
        ),
        migrations.AddIndex(
            model_name='usermodel',
            index=models.Index(fields=['role'], name='account_use_role_02d4ea_idx'),
        ),
        migrations.AddIndex(
            model_name='parentalconsent',
            index=models.Index(fields=['parent', 'child'], name='account_par_parent__45ba78_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='parentalconsent',
            unique_together={('parent', 'child')},
        ),
    ]
