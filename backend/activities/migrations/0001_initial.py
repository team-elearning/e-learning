# Generated by Django 5.2.5 on 2025-09-30 09:35

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('content', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('mcq', 'Multiple Choice'), ('short_answer', 'Short Answer'), ('matching', 'Matching')], max_length=32)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='content.lesson')),
            ],
            options={
                'verbose_name': 'Exercise',
                'verbose_name_plural': 'Exercises',
            },
        ),
        migrations.CreateModel(
            name='ExerciseAttempt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('finished_at', models.DateTimeField(blank=True, null=True)),
                ('score', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('metadata', models.JSONField(default=dict)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='activities.exercise')),
                ('student', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='exercise_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Exercise Attempt',
                'verbose_name_plural': 'Exercise Attempts',
            },
        ),
        migrations.CreateModel(
            name='ExerciseAnswer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('answer', models.JSONField(default=dict)),
                ('correct', models.BooleanField(blank=True, null=True)),
                ('attempt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='activities.exerciseattempt')),
            ],
            options={
                'verbose_name': 'Exercise Answer',
                'verbose_name_plural': 'Exercise Answers',
            },
        ),
        migrations.CreateModel(
            name='ExerciseSettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('time_limit_seconds', models.IntegerField(blank=True, null=True)),
                ('max_attempts', models.IntegerField(blank=True, null=True)),
                ('shuffle_questions', models.BooleanField(default=True)),
                ('shuffle_choices', models.BooleanField(default=True)),
                ('pass_score', models.FloatField(default=50.0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('negative_marking', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('exercise', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to='activities.exercise')),
            ],
        ),
        migrations.CreateModel(
            name='FileUploadAnswer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file', models.FileField(upload_to='exercise_answers/')),
                ('attempt_answer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='file_upload', to='activities.exerciseanswer')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('prompt', models.TextField()),
                ('meta', models.JSONField(default=dict)),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='activities.exercise')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.CreateModel(
            name='MatchingPair',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('left_text', models.TextField()),
                ('right_text', models.TextField()),
                ('correct_right_index', models.IntegerField()),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matching_pairs', to='activities.question')),
            ],
        ),
        migrations.CreateModel(
            name='Hint',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('order', models.IntegerField(default=0)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hints', to='activities.question')),
            ],
        ),
        migrations.AddField(
            model_name='exerciseanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activities.question'),
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('text', models.TextField()),
                ('is_correct', models.BooleanField(default=False)),
                ('position', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='activities.question')),
            ],
            options={
                'verbose_name': 'Choice',
                'verbose_name_plural': 'Choices',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='QuestionStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('times_shown', models.IntegerField(default=0)),
                ('times_correct', models.IntegerField(default=0)),
                ('average_time_seconds', models.FloatField(default=0.0)),
                ('question', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='activities.question')),
            ],
        ),
    ]
