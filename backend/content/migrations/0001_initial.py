# Generated by Django 5.2.5 on 2025-09-30 09:35

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('position', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('content_type', models.CharField(choices=[('lesson', 'Lesson'), ('exploration', 'Exploration'), ('exercise', 'Exercise')], default='lesson', max_length=32)),
                ('published', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Lesson',
                'verbose_name_plural': 'Lessons',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('grade', models.CharField(blank=True, max_length=16, null=True)),
                ('published', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses_owned', to=settings.AUTH_USER_MODEL)),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='content.subject')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Exploration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('language', models.CharField(default='vi', max_length=8)),
                ('published', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='explorations_owned', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Exploration',
                'verbose_name_plural': 'Explorations',
            },
        ),
        migrations.CreateModel(
            name='ExplorationState',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('content', models.JSONField(default=dict)),
                ('interaction', models.JSONField(default=dict)),
                ('exploration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='states', to='content.exploration')),
            ],
            options={
                'verbose_name': 'Exploration State',
                'verbose_name_plural': 'Exploration States',
            },
        ),
        migrations.CreateModel(
            name='ExplorationTransition',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('condition', models.JSONField(default=dict)),
                ('exploration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transitions', to='content.exploration')),
                ('from_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_transitions', to='content.explorationstate')),
                ('to_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_transitions', to='content.explorationstate')),
            ],
            options={
                'verbose_name': 'Exploration Transition',
                'verbose_name_plural': 'Exploration Transitions',
            },
        ),
        migrations.CreateModel(
            name='LessonVersion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('version', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('review', 'Review'), ('published', 'Published')], default='draft', max_length=32)),
                ('content', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lesson_versions_authored', to=settings.AUTH_USER_MODEL)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='content.lesson')),
            ],
            options={
                'verbose_name': 'Lesson Version',
                'verbose_name_plural': 'Lesson Versions',
                'ordering': ['-version'],
                'unique_together': {('lesson', 'version')},
            },
        ),
        migrations.CreateModel(
            name='ContentBlock',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('text', 'Text'), ('image', 'Image'), ('video', 'Video'), ('quiz', 'Quiz'), ('exploration_ref', 'Exploration Reference')], max_length=32)),
                ('position', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('payload', models.JSONField(default=dict)),
                ('lesson_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='content_blocks', to='content.lessonversion')),
            ],
            options={
                'verbose_name': 'Content Block',
                'verbose_name_plural': 'Content Blocks',
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('position', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='content.course')),
            ],
            options={
                'verbose_name': 'Module',
                'verbose_name_plural': 'Modules',
                'ordering': ['position'],
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='content.module'),
        ),
    ]
